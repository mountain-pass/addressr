{
  "name": "@mountainpass/addressr",
  "version": "1.0.260",
  "description": "Australian Address Validation, Search and Autocomplete",
  "author": "Mountain Pass <addressr@mountain-pass.com.au>",
  "contributors": [
    "Tom Howard <tom@mountain-pass.com.au>"
  ],
  "engines": {
    "node": ">=12.11.0"
  },
  "config": {
    "localport": "6060"
  },
  "scripts": {
    "hmm": "echo mountainpass-addressr-${npm_package_version}.tgz",
    "requirements-check": "scripts/check-version.js",
    "postinstall": "npm run requirements-check",
    "prestart:loader:babel:OT": "npm run build && cp -r target lib/.",
    "start:loader:babel:OT": "ES_INDEX_NAME=ot COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport node lib/loader.js",
    "start:loader:packaged:OT": "npm pack && npm install -g mountainpass-addressr-${npm_package_version}.tgz && ES_INDEX_NAME=ot COVERED_STATES=OT addressr-loader",
    "start:loader:prepackaged": "npm install -g mountainpass-addressr-${npm_package_version}.tgz && addressr-loader",
    "start:loader:packaged": "npm pack && npm install -g mountainpass-addressr-${npm_package_version}.tgz && addressr-loader",
    "start:loader:packaged:geo": "npm pack && npm install -g mountainpass-addressr-${npm_package_version}.tgz && ADDRESSR_ENABLE_GEO=1 DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 addressr-loader",
    "start:loader:OT": "ES_INDEX_NAME=ot COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport babel-node loader.js",
    "start:loader:OT:geo": "ADDRESSR_ENABLE_GEO=1 ES_INDEX_NAME=ot COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:VIC:geo": "ADDRESSR_ENABLE_GEO=1 ES_INDEX_NAME=ot COVERED_STATES=VIC DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js",
    "start:loader": "DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport babel-node loader.js",
    "start:loader:geo": "ADDRESSR_ENABLE_GEO=1 DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:prod": ". .env && PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:prod:clear": ". .env && ES_CLEAR_INDEX=1 PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:ACT:prod": ". .env && COVERED_STATES=ACT PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:NSW:prod": ". .env && COVERED_STATES=NSW PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:NT:prod": ". .env && COVERED_STATES=NT PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:QLD:prod": ". .env && COVERED_STATES=QLD PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:OT:prod": ". .env && COVERED_STATES=OT PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:SA:prod": ". .env && COVERED_STATES=SA PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:TAS:prod": ". .env && COVERED_STATES=TAS PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:VIC:prod": ". .env && COVERED_STATES=VIC PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:loader:geo:WA:prod": ". .env && COVERED_STATES=WA PORT=$npm_package_config_localport NODE_OPTIONS=--max_old_space_size=8196 babel-node loader.js ",
    "start:server:OT": "ES_INDEX_NAME=ot  DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport babel-node server.js",
    "start:server": "DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport babel-node server.js",
    "start:server:prod": ". .env && PORT=$npm_package_config_localport DEBUG=error,api,express:*,swagger-tools*,test,es babel-node server.js",
    "start:server2:prod": ". .env && ADDRESSR_ACCESS_CONTROL_ALLOW_ORIGIN=null ADDRESSR_ACCESS_CONTROL_EXPOSE_HEADERS=* PORT=$npm_package_config_localport DEBUG=error,api,express:*,swagger-tools*,test,es babel-node src/server2.js",
    "start:server:OT:prod": ". .env && ES_INDEX_NAME=ot PORT=$npm_package_config_localport DEBUG=error,api,express:*,swagger-tools*,test,es babel-node server.js",
    "start:server:preinstalled": "ES_INDEX_NAME=test DEBUG=error,api,express:*,swagger-tools*,test,es  PORT=$npm_package_config_localport addressr-server",
    "start:server:prepackaged": "npm install -g mountainpass-addressr-${npm_package_version}.tgz && ES_INDEX_NAME=test PORT=$npm_package_config_localport addressr-server",
    "start:server:packaged": "npm pack && npm install -g mountainpass-addressr-${npm_package_version}.tgz && ES_INDEX_NAME=test PORT=$npm_package_config_localport addressr-server",
    "prestart:server:babel": "npm run build && cp -r target lib/.",
    "start:server:babel": "ES_INDEX_NAME=test DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport node lib/bin/addressr-server.js",
    "start:server:8081": "DEBUG=error,api,express:*,swagger-tools*,test,es PORT=8081 babel-node server.js",
    "prestart:server:docker": "npm run build:docker",
    "start:server:docker": "docker run -it --read-only=true -e ADDRESSR_ACCESS_CONTROL_ALLOW_ORIGIN=* -e ADDRESSR_ACCESS_CONTROL_EXPOSE_HEADERS=* -e ES_INDEX_NAME=test -e DEBUG=error,api,express:*,swagger-tools*,test,es -e PORT=$npm_package_config_localport -p $npm_package_config_localport:$npm_package_config_localport mountainpass/addressr:${npm_package_version}",
    "watch:start:server": "nodemon -V  --ext \"*.js, *.json, *.yaml\" -x npm run start:server",
    "watch:start:server:OT": "nodemon -V  --ext \"*.js, *.json, *.yaml\" -x npm run start:server:OT",
    "start:server2": "DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport babel-node src/server2.js",
    "start:server2:preinstalled": "ES_INDEX_NAME=test DEBUG=error,api,express:*,swagger-tools*,test,es  PORT=$npm_package_config_localport addressr-server-2",
    "npm-check": "npm-check  --skip-unused",
    "npm-check:interactive": "npm-check --skip-unused -u ",
    "npm-check-unused": "npm-check",
    "lint": "eslint . --fix",
    "test": "NO_STRICT=' ' npm-run-all --serial test:nogeo test:geo",
    "test:nogeo": "NO_STRICT=' ' npm-run-all --serial test:nodejs:nogeo test:rest:nogeo test:cli:nogeo",
    "test:geo": "NO_STRICT=' ' npm-run-all --serial test:nodejs:geo test:rest:geo test:cli:geo",
    "watch:test": "nodemon -V  --ext \"*.feature, *.js, *.json, *.css, *.yaml\" -x npm -- run test",
    "genversion": "genversion --es6 --semi version.js",
    "pretest:nodejs:nogeo": "npm run genversion",
    "test:nodejs:nogeo": "ES_INDEX_NAME=test COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es TEST_PROFILE=default cucumber-js -p default -- --harmony_async_iteration",
    "cover:nodejs:nogeo": "nyc --report-dir coverage/nodejs --temp-dir coverage/nodejs/.nyc_output npm run test:nodejs:nogeo",
    "test:nodejs:geo": "ADDRESSR_ENABLE_GEO=1 ES_INDEX_NAME=test-geo COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es TEST_PROFILE=default cucumber-js -p default -- --harmony_async_iteration",
    "cover:nodejs:geo": "nyc --report-dir coverage/nodejs-geo --temp-dir coverage/nodejs-geo/.nyc_output npm run test:nodejs:geo",
    "watch:test:nodejs:nogeo": "nodemon -V  --ext \"*.feature, *.js, *.json, *.css, *.yaml\" -x npm -- run test:nodejs:nogeo",
    "test:rest:nogeo": "PORT=$npm_package_config_localport ES_INDEX_NAME=test COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es TEST_PROFILE=rest cucumber-js -p rest -- --harmony_async_iteration",
    "cover:rest:nogeo": "nyc --report-dir coverage/rest --temp-dir coverage/rest/.nyc_output npm run test:rest:nogeo",
    "test:rest:geo": "PORT=$npm_package_config_localport ADDRESSR_ENABLE_GEO=1 ES_INDEX_NAME=test-geo COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es TEST_PROFILE=rest cucumber-js -p rest -- --harmony_async_iteration",
    "cover:rest:geo": "nyc --report-dir coverage/rest-geo --temp-dir coverage/rest-geo/.nyc_output npm run test:rest:geo",
    "test:rest2:geo": "PORT=$npm_package_config_localport ADDRESSR_ENABLE_GEO=1 ES_INDEX_NAME=test-geo COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es,waychaser,waycharter TEST_PROFILE=rest2 cucumber-js -p rest2 -- --harmony_async_iteration",
    "watch:test:rest2:geo": "nodemon -V -x npm -- run ${npm_lifecycle_event#watch:}",
    "watch:test:rest:nogeo": "nodemon -V  --ext \"*.feature, *.js, *.json, *.css, *.yaml\" -x npm -- run test:rest:nogeo",
    "dotest:cli:nogeo": "ES_INDEX_NAME=test COVERED_STATES=OT TEST_PROFILE=cli cucumber-js -p cli -- --harmony_async_iteration",
    "pretest:cli:nogeo": "npm pack && npm install -g mountainpass-addressr-${npm_package_version}.tgz && ES_INDEX_NAME=test COVERED_STATES=OT DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport addressr-loader",
    "test:cli:nogeo": "ES_INDEX_NAME=test PORT=$npm_package_config_localport DEBUG=error,api,express:*,swagger-tools*,test,es run-p --race start:server:preinstalled dotest:cli:nogeo",
    "cover:cli:nogeo": "nyc --report-dir coverage/cli --temp-dir coverage/cli/.nyc_output npm run test:cli:nogeo",
    "test:cli:geo": "ES_INDEX_NAME=test PORT=$npm_package_config_localport ADDRESSR_ENABLE_GEO=1 DEBUG=error,api,express:*,swagger-tools*,test,es run-p --race start:server:preinstalled dotest:cli:nogeo",
    "pretest:cli2:geo": "npm pack && npm install -g mountainpass-addressr-${npm_package_version}.tgz && ES_INDEX_NAME=test COVERED_STATES=OT ADDRESSR_ENABLE_GEO=1 DEBUG=error,api,express:*,swagger-tools*,test,es PORT=$npm_package_config_localport addressr-loader",
    "test:cli2:geo": "ES_INDEX_NAME=test PORT=$npm_package_config_localport ADDRESSR_ENABLE_GEO=1 DEBUG=error,api,express:*,swagger-tools*,test,es run-p --race start:server2:preinstalled dotest:cli2:geo",
    "dotest:cli2:geo": "ADDRESSR_ENABLE_GEO=1 ES_INDEX_NAME=test COVERED_STATES=OT TEST_PROFILE=cli2 cucumber-js -p cli2 -- --harmony_async_iteration",
    "cover:cli:geo": "nyc --report-dir coverage/cli --temp-dir coverage/cli/.nyc_output npm run test:cli:nogeo",
    "test:nodejs:QLD:nogeo": "PORT=$npm_package_config_localport ES_INDEX_NAME=test COVERED_STATES=QLD DEBUG=error,api,express:*,swagger-tools*,test,es TEST_PROFILE=default cucumber-js -p default -- --harmony_async_iteration",
    "test:nodejs:QLD:geo": "PORT=$npm_package_config_localport ADDRESSR_ENABLE_GEO=1 ES_INDEX_NAME=test-geo COVERED_STATES=QLD DEBUG=error,api,express:*,swagger-tools*,test,es TEST_PROFILE=default NODE_OPTIONS=--max_old_space_size=8196 cucumber-js -p default -- --harmony_async_iteration",
    "prebuildX": "npm run genversion && cat ./templates/LICENSE.md | envsubst '${PRODUCT},${VERSION},${COMPANY},${YEAR}' > ./LICENSE.md",
    "prebuild": "npm run genversion",
    "build": "babel . --ignore ./LICENSE.template.md --ignore  node_modules --ignore test --ignore lib --ignore cucumber.js --ignore scripts -d lib ",
    "prebuild:docker": "npm pack && cp .dockerignore.tmpl .dockerignore && echo \"!mountainpass-addressr-${npm_package_version}.tgz\" >> .dockerignore",
    "build:docker": "docker build --build-arg PACKAGE_TGZ=mountainpass-addressr-${npm_package_version}.tgz --build-arg PACKAGE=${npm_package_name} --build-arg VERSION=${npm_package_version} --build-arg MAINTAINER=${npm_package_author_email} -t mountainpass/addressr:${npm_package_version}  -t mountainpass/addressr:latest .",
    "postbuild": "cp -r api lib/.",
    "postpostbuild": "export PRODUCT=${npm_package_name} VERSION=${npm_package_version} COMPANY='Mountain Pass Pty Ltd' YEAR=`date '+%Y'`",
    "prepack": "npm run build",
    "dopublish": "npm publish mountainpass-addressr-${npm_package_version}.tgz --access public",
    "predocker:push": "echo \"$DOCKER_ID_PASS\" | docker login --username \"$DOCKER_ID_USER\" --password-stdin",
    "docker:push": "docker push \"mountainpass/addressr:${npm_package_version}\"",
    "postdocker:push": "docker push \"mountainpass/addressr:latest\"",
    "check-licenses": "license-checker --production --onlyAllow 'MIT;Apache-2.0;ISC;Custom: http://github.com/substack/node-bufferlist;Unlicense;BSD-2-Clause;BSD-3-Clause;WTFPL;0BSD;MIT*' --summary",
    "pre-commit": "lint-staged && npm run check-licenses"
  },
  "bin": {
    "addressr-loader": "lib/bin/addressr-loader.js",
    "addressr-server": "lib/bin/addressr-server.js",
    "addressr-server-2": "lib/bin/addressr-server-2.js"
  },
  "files": [
    "api/",
    "lib/",
    "scripts/check-version.js",
    "20160226-eula-open-g-naf.pdf",
    "example.html"
  ],
  "keywords": [
    "swagger",
    "g-naf",
    "address",
    "australia",
    "validation",
    "autocomplete",
    "autosuggest",
    "street-address",
    "geo",
    "geocoding",
    "Geo::StreetAddress:AU"
  ],
  "license": "Apache-2.0",
  "private": false,
  "dependencies": {
    "@elastic/elasticsearch": "^7.13.0",
    "@mountainpass/waycharter": "^1.0.68",
    "debug": "^4.1.1",
    "directory-exists": "^2.0.1",
    "dotenv": "^10.0.0",
    "express": "^4.17.1",
    "got": "^9.6.0",
    "http-link-header": "1.0.2",
    "js-yaml": "^4.1.0",
    "json-ptr": "2.0.0",
    "keyv": "^4.0.1",
    "keyv-file": "^0.2.0",
    "node-machine-id": "^1.1.12",
    "papaparse": "^5.0.0",
    "progress": "^2.0.3",
    "semver": "^7.3.2",
    "swagger-tools": "^0.10.4",
    "unzip-stream": "^0.3.0",
    "uri-template-lite": "^20.5.0",
    "wait-port": "^0.2.2"
  },
  "devDependencies": {
    "@babel/cli": "^7.6.2",
    "@babel/core": "^7.6.2",
    "@babel/node": "^7.6.2",
    "@babel/plugin-proposal-class-properties": "^7.5.5",
    "@babel/plugin-transform-runtime": "^7.6.2",
    "@babel/polyfill": "^7.4.4",
    "@babel/preset-env": "^7.6.2",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.7.0",
    "@babel/runtime": "^7.5.0",
    "@istanbuljs/nyc-config-babel": "^3.0.0",
    "@mountainpass/waychaser": "^4.0.0",
    "@windyroad/cucumber-js-throwables": "^1.0.4",
    "@windyroad/quick-containers-js": "^2.0.0",
    "babel-eslint": "^10.0.2",
    "babel-plugin-istanbul": "^6.0.0",
    "babel-preset-env": "^1.7.0",
    "chai": "^4.2.0",
    "cucumber": "^5.1.0",
    "dockerode": "^3.3.0",
    "eslint": "^7.9.0",
    "eslint-config-prettier": "^8.0.0",
    "eslint-plugin-chai-friendly": "^0.7.1",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.1",
    "eslint-plugin-promise": "^5.1.0",
    "eslint-plugin-react": "^7.7.0",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-unicorn": "^34.0.1",
    "genversion": "^3.0.0",
    "husky": "^7.0.0",
    "imagemin-lint-staged": "^0.4.0",
    "istanbul": "^0.4.5",
    "istanbul-middleware": "^0.2.2",
    "license-checker": "^25.0.1",
    "lint-staged": "^11.0.0",
    "ngrok": "^4.0.1",
    "nodemon": "^2.0.4",
    "npm-check": "^5.9.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^15.1.0",
    "prettier": "^2.1.0",
    "prettier-config-standard": "^4.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mountain-pass/addressr.git"
  },
  "bugs": {
    "url": "https://github.com/mountain-pass/addressr/issues"
  },
  "homepage": "https://addressr.mountain-pass.com.au",
  "lint-staged": {
    "*.{js,jsx}": [
      "eslint --fix",
      "git add"
    ],
    "*.{json,css,md}": [
      "prettier --write",
      "git add"
    ],
    "*.{png,jpeg,jpg,gif,svg}": [
      "imagemin-lint-staged",
      "git add"
    ],
    ".circleci/config.yml": [
      "circleci config validate",
      "git add"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run pre-commit"
    }
  }
}
